---
import Container from "../shared/Container.astro";
import "iconify-icon";
import { iconsMapping } from "../../icons/iconsMapping";
const { project } = Astro.props;
import { render } from "astro:content";

const { data, slug } = project;
const { title, img, tags, repoUrl, demoUrl } = data;
const { Content } = await render(project);


const { currentLocale } = Astro;
const backHref = currentLocale === "en" ? "/en/#projects" : "/#projects";
const backText = currentLocale === "en" ? "Back to Projects" : "Volver a Proyectos";

const skills = tags
    ? tags.map((tag) => {
          if (tag.toLowerCase() === "phaser") {
              return { type: "image", src: "/logos/phaser.png", alt: "Phaser" };
          }
          return iconsMapping[tag] || { light: tag, dark: tag, alt: tag };
      })
    : [];
---

<Container>
    <header class="relative h-64 md:h-96">
        <img
            src={`/projects/${img}`}
            alt={title}
            class="absolute inset-0 w-full h-full object-cover rounded-b-xl"
            transition:name={`img-${slug}`}
        />
        <div
            class="absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent rounded-b-lg"
        >
        </div>
        <div class="absolute bottom-2 left-2 md:bottom-8 md:left-8 flex flex-row items-center gap-4">
            <h1
                class="text-2xl md:text-5xl font-bold text-white drop-shadow-lg"
                transition:name={`title-${slug}`}
            >
                {title}
            </h1>
            {repoUrl && (
                <a
                    href={repoUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    transition:name={`github-${slug}`}
                >
                    <iconify-icon
                        icon="skill-icons:github-light"
                        class="block dark:hidden text-2xl md:text-4xl"
                        title="GitHub" />
                    <iconify-icon
                        icon="skill-icons:github-dark"
                        class="hidden dark:block text-2xl md:text-4xl"
                        title="GitHub" />
                </a>
            )}
            {demoUrl && (
                <a
                    href={demoUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    transition:name={`demo-${slug}`}
                >
                    <iconify-icon
                        icon="iconoir:internet"
                        class="block text-2xl md:text-4xl text-white"
                        title={title} />
                </a>
            )}
        </div>
        {
            skills.length > 0 && (
                <div class="hidden md:flex absolute bottom-4 right-4 gap-2" transition:name={`skills-${slug}`}>
                    {skills.map((skill, i) =>
                        skill.type === "image" ? (
                            <img
                                key={i}
                                src={skill.src}
                                alt={skill.alt}
                                class="w-6 h-6 md:w-8 md:h-8"
                                title={skill.alt}
                            />
                        ) : (
                            <>
                                <iconify-icon
                                    key={`${i}-light`}
                                    icon={skill.light}
                                    class="block dark:hidden text-xl md:text-2xl text-white"
                                    title={skill.alt}
                                />
                                <iconify-icon
                                    key={`${i}-dark`}
                                    icon={skill.dark}
                                    class="hidden dark:block text-xl md:text-2xl text-white"
                                    title={skill.alt}
                                />
                            </>
                        ),
                    )}
                </div>
            )
        }
    </header>
    <div class="flex justify-start px-4 my-4">
        <a
          href={backHref}
          class="inline-flex items-center gap-2 bg-transparent border border-gray-300 dark:border-gray-600 text-gray-800 dark:text-gray-200 px-4 py-2 rounded transition hover:bg-gray-100 dark:hover:bg-gray-700"
        >
          <iconify-icon icon="mdi:arrow-left" class="text-xl" title="Volver"></iconify-icon>
          {backText}
        </a>
      </div>
    <main class="px-4 py-8">
        <div class="prose dark:prose-invert max-w-prose mx-auto">
            {
                skills.length > 0 && (
                    <div class="md:hidden flex gap-2">
                        {skills.map((skill, i) =>
                            skill.type === "image" ? (
                                <img
                                    key={i}
                                    src={skill.src}
                                    alt={skill.alt}
                                    class="w-8 h-8"
                                    title={skill.alt}
                                />
                            ) : (
                                <>
                                    <iconify-icon
                                        key={`${i}-light`}
                                        icon={skill.light}
                                        class="block dark:hidden text-2xl text-white"
                                        title={skill.alt}
                                    />
                                    <iconify-icon
                                        key={`${i}-dark`}
                                        icon={skill.dark}
                                        class="hidden dark:block text-2xl text-white"
                                        title={skill.alt}
                                    />
                                </>
                            ),
                        )}
                    </div>
                )
            }
            <Content />
        </div>
    </main>
</Container>

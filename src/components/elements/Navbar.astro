---
import Container from "../shared/Container.astro";
import Navitem from "../shared/Navitem.astro";
import Button from "../shared/Button.astro";
import LanguageSelector from "./LanguageSelector.astro";
import { getI18n } from "../../i18n";

const { currentLocale } = Astro
const i18n = getI18n({ currentLocale })

const navItems = [
    {
        href: "#",
        text: i18n.nav.home,
    },
    {
        href: "#about",
        text: i18n.nav.about,
    },
    {
        href: "#timeline",
        text: i18n.nav.trayectory,
    },
    {
        href: "#skills",
        text: i18n.nav.skills,
    },
    {
        href: "#projects",
        text: i18n.nav.projects,
    },
];
---

<header
    id="header"
    class="fixed inset-x-0 top-0 z-50 py-6 transition-transform duration-500 ease-in-out"
>
    <Container>
        <nav class="w-full flex justify-between gap-6 relative">
            <div class="min-w-max inline-flex relative">
                <a href="/" class="relative flex items-center gap-3">
                    <img
                        src="/images/webicon.png"
                        alt="CGL"
                        class="w-7 h-7 overflow-hidden"
                    />
                    <div
                        class="inline-flex text-base md:text-lg font-semibold text-heading-1"
                    >
                        {i18n.nav.title}
                    </div>
                </a>
            </div>

            <div
                data-nav-overlay
                aria-hidden="true"
                class="fixed hidden inset-0 lg:!hidden bg-opacity-50 backdrop-filter backdrop-blur-xl"
            >
            </div>
            <div
                data-navbar
                class="flex h-0 overflow-hidden lg:!h-auto lg:scale-y-100 duration-300 ease-linear flex-col gap-y-6 gap-x-4 lg:flex-row w-full lg:justify-between lg:items-center absolute lg:relative top-full lg:top-0 bg-body lg:bg-transparent border-x border-x-box-border lg:border-x-0"
            >
                <ul
                    class="border-t border-box-border lg:border-t-0 px-6 lg:px-0 pt-6 lg:pt-0 flex flex-col lg:flex-row gap-y-4 gap-x-5 text-lg text-heading-2 w-full lg:justify-center lg:items-center"
                >
                    {
                        navItems.map((item) => {
                            return <Navitem {...item} />;
                        })
                    }
                </ul>

                <div
                    class="lg:min-w-max flex items-center sm:w-max w-full pb-6 lg:pb-0 border-b border-box-bg lg:border-0 px-6 lg:px-0"
                >
                    <Button
                        variant={"primary"}
                        className={"min-w-max text-white"}
                    >
                        <span
                            class="flex flex-row relative z-[5] justify-center items-center"
                        >
                            <iconify-icon icon="mdi:file-pdf" class="text-2xl"
                            ></iconify-icon> &nbsp;&nbsp;{i18n.nav.curriculum}
                        </span>
                    </Button>
                </div>
            </div>

            <div class="min-w-max flex items-center gap-x-2 md:gap-x-3">
                <LanguageSelector />
                <button
                    data-switch-theme
                    class="outline-none flex relative text-heading-2 rounded-full p-2 lg:p-3 border border-box-border"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="w-6 h-6 dark:flex hidden"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
                        ></path>
                    </svg>
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="w-6 h-6 dark:hidden"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
                        ></path>
                    </svg>

                    <span class="sr-only">{i18n.nav.theme}</span>
                </button>

                <button
                    data-toggle-nav
                    data-open-nav="false"
                    class="lg:hidden lg:invisible outline-none w-7 h-auto flex flex-col relative"
                >
                    <span
                        id="line1"
                        class="w-6 h-0.5 rounded-full bg-heading-2 transition-all duration-300 ease-linear"
                    ></span>
                    <span
                        id="line2"
                        class="w-6 origin-center mt-1 h-0.5 rounded-ful bg-heading-2 transition-all duration-300 ease-linear"
                    ></span>
                    <span
                        id="line3"
                        class="w-6 mt-1 h-0.5 rounded-ful bg-heading-2 transition-all duration-300 ease-linear"
                    ></span>
                    <span class="sr-only">{i18n.nav.tooglenav}</span>
                </button>
            </div>
        </nav>
    </Container>
</header>

<style>
    #header {
        background-color: var(--header-bg-transparent);
        transition:
            background-color 0.5s ease,
            box-shadow 0.5s ease,
            transform 0.3s ease-out;
    }

    #header.scrolled {
        background-color: rgba(var(--header-bg), 0.8);
        box-shadow: 0 4px 6px rgba(var(--header-shadow));
    }

    #header.diminishing {
        background-color: rgba(var(--header-bg), 0.5);
    }

    .bg-box-bg {
        background-color: #f0f0f0;
    }

    @media (max-width: 1025px) {
        #header {
            background-color: rgb(var(--header-bg));
        }
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        let lastScroll = 0;
        const header = document.querySelector("header");
        let scrollTimeout;
    
        window.addEventListener("scroll", () => {
            const currentScroll = window.pageYOffset;
            const windowWidth = window.innerWidth;
    
            if (windowWidth < 1025) {
                return;
            }
    
            if (currentScroll > 100) {
                header.classList.add("scrolled");
            } else {
                header.classList.remove("scrolled");
            }
    
            if (currentScroll < 0) {
                header.classList.add("diminishing");
            } else {
                header.classList.remove("diminishing");
            }
    
            if (currentScroll > lastScroll && currentScroll > 100) {
                header.style.transform = "translateY(-100%)";
            } else {
                header.style.transform = "translateY(0)";
                clearTimeout(scrollTimeout);
                scrollTimeout = setTimeout(() => {
                    if (window.pageYOffset > 100) {
                        header.style.transform = "translateY(-100%)";
                    }
                }, 4000);
            }
    
            lastScroll = currentScroll;
        });
    });
</script>

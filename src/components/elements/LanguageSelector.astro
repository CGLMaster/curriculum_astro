---
import ChevronIcon from "../icons/Chevron.astro";
import { languages } from "../../i18n/ui";
import {
    getRouteFromUrl,
    useTranslatedPath,
    getLangFromUrl,
} from "../../i18n/utils";

const route = getRouteFromUrl(Astro.url);
const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

const currentLocaleData = languages[lang];
const otherLocales = Object.values(languages).filter(
    (locale) => locale.code !== lang,
);
---

<div class="relative inline-block text-left">
    <div
        class="group text-heading-1 rounded-md text-xs font-semibold hover:bg-box-bg transition-all"
    >
        <button
            type="button"
            class="inline-flex justify-start items-center w-full gap-x-2 px-3 py-2"
            aria-expanded="true"
            aria-haspopup="true"
        >
            <iconify-icon icon={currentLocaleData.flag} class="text-2xl" />
            <span class="hidden sm:inline">{currentLocaleData.name}</span>
            <ChevronIcon className="hidden sm:inline"/>
        </button>
        <ul
            class="group-hover:block group-hover:animate-fade-down group-hover:animate-duration-200 hidden pt-0.5 absolute w-full"
        >
            {
                otherLocales.map((locale) => (
                    <li class="py-[2px]">
                        <a
                            class="rounded-md bg-box-bg hover:bg-box-bg/70 whitespace-no-wrap inline-flex justify-start items-center w-full gap-x-2 px-3 py-2"
                            href={translatePath(
                                `/${route ? route : ""}`,
                                locale.code,
                            )}
                        >
                            <iconify-icon icon={locale.flag} class="text-2xl" />
                            <span class="hidden sm:inline">{locale.name}</span>
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</div>
